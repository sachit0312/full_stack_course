{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","deleteNote","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","token","request","axios","get","console","log","then","response","data","newObject","config","headers","Authorization","post","id","put","delete","newToken","concat","login","credentials","a","create","App","clickState","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","noteService","populate","setTimeout","initialNotes","newNotes","filter","settingNotes","useEffect","loggedUserJSON","getItem","parse","addNote","noteObject","Math","random","returnedNote","catch","error","handleLogout","removeItem","handleNoteChange","target","value","notesToShow","onSubmit","type","name","onChange","map","find","n","changedNote","toggleImportanceOf","deleteNoteOf","ReactDOM","render","document","getElementById"],"mappings":"mMAeeA,EAbF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,iBAAiBC,EAAiB,EAAjBA,WAC/BC,EAAQH,EAAKI,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACE,4BAAIL,EAAKM,UACT,wBAAQC,QAASN,EAAjB,SAAoCE,IACpC,wBAAQI,QAASL,EAAjB,wBCISM,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCQQC,EAfA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,iE,gBCXAC,EAAU,YAEZC,EAAS,KA+BE,EAzBA,WACb,IAAMC,EAAUC,IAAMC,IAAIJ,GAE1B,OADAK,QAAQC,IAAIJ,GACLA,EAAQK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAsB5B,EAnBA,SAAAC,GACb,IAAMC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAI5B,OADgBE,IAAMW,KAAKd,EAASU,EAAWC,GAChCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACM,EAAIL,GAElB,OADgBP,IAAMa,IAAN,UAAahB,EAAb,YAAwBe,GAAML,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALH,SAAAM,GAEV,OADgBZ,IAAMc,OAAN,UAAgBjB,EAAhB,YAA2Be,IAC5BR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAG5B,EA7BE,SAAAS,GACfjB,EAAO,UAAUkB,OAAOD,ICQX,GAAEE,MAVN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWnB,IAAMW,KAJf,aAI6BO,GAD/B,cACNb,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDAUYc,OANX,uCAAG,WAAMF,GAAN,eAAAC,EAAA,sEACYnB,IAAMW,KAPjB,aAOgCO,GADjC,cACLb,EADK,yBAEJA,EAASC,MAFL,2CAAH,uDCsNGe,EAvNH,WACV,IAQIC,EARJ,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAwBZ,mBAAS,MAAjC,mBAAOa,EAAP,KAAaC,EAAb,KAGMC,EAAW,uCAAG,WAAOC,GAAP,eAAApB,EAAA,yDAClBoB,EAAMC,iBACU,IAAblB,EAFe,0CAIGmB,EAAaxB,MAAM,CACpCe,WAAUE,aALI,OAIVE,EAJU,OAOhBM,OAAOC,aAAaC,QAClB,oBAAqBC,KAAKC,UAAUV,IAEtCW,EAAqBX,EAAKtC,OAC1BkD,EAASZ,EAAKtC,MAAMc,IACpByB,EAAQD,GACRH,EAAY,IACZE,EAAY,IAdI,kDAgBhBJ,EAAgB,qBAChBkB,YAAW,WACTlB,EAAgB,QACf,KAnBa,2DAuBRU,EAAarB,OAAO,CACxBY,WAAUE,aAxBE,QA0BdH,EAAgB,oBAChBM,EAAQ,MACRJ,EAAY,IACZE,EAAY,IA7BE,mDA+BdJ,EAAgB,qBAChBkB,YAAW,WACTlB,EAAgB,QACf,KAlCW,kEAAH,sDA4CXiB,EAAW,SAAApC,GACfmC,IAEG3C,MAAK,SAAA8C,IARW,SAACA,EAAatC,GACjC,IAAMuC,EAAUD,EAAaE,QAAO,SAAAtE,GAAI,OAAEA,EAAKsD,OAAOxB,KACtDa,EAAS0B,GAOPE,CAAaH,EAAatC,OAI9B0C,qBAAU,WACR,IAAMC,EAAiBb,OAAOC,aAAaa,QAAQ,qBACnD,GAAID,EAAgB,CAClB,IAAMnB,EAAOS,KAAKY,MAAMF,GACxBlB,EAAQD,GACRW,EAAqBX,EAAKtC,UAE3B,IAEH,IAAM4D,EAAU,SAACnB,GACfA,EAAMC,iBACN,IAAMmB,EAAa,CACjBvE,QAASsC,EACTxC,UAAW0E,KAAKC,SAAW,IAG7Bd,EACUY,GACLvD,MAAK,SAAA0D,GACNrC,EAASD,EAAMR,OAAO8C,IACtBnC,EAAW,OAEZoC,OAAM,SAAAC,GACLjC,EAAgB,SAAD,OACJ4B,EAAWvE,QADP,mBAGf6D,YAAW,WACTlB,EAAgB,QACf,SAuCHkC,EAAe,WACnBvB,OAAOC,aAAauB,WAAW,qBAC/B7B,EAAQ,OAGJ8B,EAAmB,SAAC5B,GACxBrC,QAAQC,IAAIoC,EAAM6B,OAAOC,OACzB1C,EAAWY,EAAM6B,OAAOC,QAGpBC,EAAc1C,EAClBJ,EACAA,EAAM4B,QAAO,SAAAtE,GAAI,OAAIA,EAAKI,aAyD5B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASuC,IAEb,OAATM,EA3DH,uBAAMmC,SAAUjC,EAAhB,UACE,gCACE,yCACE,uBACAkC,KAAK,OACLH,MAAOrC,EACPyC,KAAK,WACLC,SAAU,gBAAGN,EAAH,EAAGA,OAAH,OAAgBnC,EAAYmC,EAAOC,aAGjD,gCACE,yCACE,uBACAG,KAAK,WACLH,MAAOnC,EACPuC,KAAK,WACLC,SAAU,gBAAGN,EAAH,EAAGA,OAAH,OAAgBjC,EAAYiC,EAAOC,aAGjD,wBAAQG,KAAK,SAASnF,QAAW,kBAAMiC,EAAW,GAAlD,mBACA,wBAAQkD,KAAK,SAASnF,QAAW,kBAAMiC,EAAW,GAAlD,wBAyCA,gCACE,qCAAQc,EAAKqC,KAAb,wCArCN,qCACE,uBAAMF,SAAUb,EAAhB,UACE,uBACEW,MAAO3C,EACPgD,SAAUP,IAEZ,wBAAQK,KAAK,SAAb,qBAEF,8BACI,yBAAQnF,QAAS,kBAAMwC,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACG0C,EAAYK,KAAI,SAAA7F,GAAI,OACjB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA7FH,SAAA6B,GACzB,IAAM9B,EAAO0C,EAAMoD,MAAK,SAAAC,GAAC,OAAIA,EAAEjE,KAAOA,KAChCkE,EAAW,2BAAQhG,GAAR,IAAcI,WAAYJ,EAAKI,YAEhD6D,EACQnC,EAAIkE,GACT1E,MAAK,SAAA0D,GACNrC,EAASD,EAAMmD,KAAI,SAAA7F,GAAI,OAAIA,EAAK8B,KAAOA,EAAK9B,EAAOgF,SAEpDC,OAAM,SAAAC,GACLjC,EAAgB,SAAD,OACJjD,EAAKM,QADD,sCAGf6D,YAAW,WACTlB,EAAgB,QACf,QA8E6BgD,CAAmBjG,EAAK8B,KAChD5B,WAAc,kBA3EL,SAAA4B,GACnB,IAAM9B,EAAK0C,EAAMoD,MAAK,SAAAC,GAAC,OAAGA,EAAEjE,KAAOA,KACnCmC,EAAgBnC,GAAIR,MAAK,SAAA0D,GACvB5D,QAAQC,IAAI2D,GACZrC,EAASD,EAAM4B,QAAO,SAAAtE,GAAI,OAAIA,EAAK8B,KAAOA,SAE3CmD,OAAM,SAAAC,GACLjC,EAAgB,SAAD,OACJjD,EAAKM,QADD,sCAGf6D,YAAW,WACTlB,EAAgB,QACf,QA+DyBiD,CAAalG,EAAK8B,MAHjC9B,EAAK8B,SAOtB,sBACA,wBAAQvB,QAAS4E,EAAjB,0BAiBI,cAAC,EAAD,Q,MCrNNgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.21e04a26.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance,deleteNote }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      <p>{note.content}</p>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n      <button onClick={deleteNote}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Sachit Goyal 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = 'api/notes'\r\n\r\nlet token =  null\r\n\r\nconst setToken = newToken => {\r\n  token= 'bearer '.concat(newToken)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  console.log(request)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = axios.post(baseUrl, newObject, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, create, update,del,setToken\r\n}","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\nconst baseUrl2 ='/api/users'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\nconst create = async credentials => {\r\n    const response = await axios.post(baseUrl2, credentials)\r\n    return response.data\r\n}\r\n\r\n\r\nexport default { login,create }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  let clickState\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    if(clickState===1) {\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n      noteService.setToken(user.token)\n      populate(user.token.id)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }}\n    else {\n      try {\n        await loginService.create({\n          username, password,\n        })\n        setErrorMessage(\"Account Created.\")\n        setUser(null)\n        setUsername('')\n        setPassword('')\n      } catch (exception) {\n        setErrorMessage('Wrong credentials')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n    }\n  }\n\n  const settingNotes = (initialNotes,id) => {\n    const newNotes= initialNotes.filter(note=>note.user===id)\n    setNotes(newNotes)\n  }\n\n  const populate = id => { \n    noteService\n      .getAll()\n      .then(initialNotes => {\n      settingNotes(initialNotes,id)\n    })\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${noteObject.content}' is too short`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })    \n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const deleteNoteOf = id => {\n    const note=notes.find(n=> n.id === id)\n    noteService.del(id).then(returnedNote => {\n      console.log(returnedNote)\n      setNotes(notes.filter(note => note.id !== id))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })    \n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedNoteappUser')\n    setUser(null)\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        <p>Username</p>\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        <p>Password</p>\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\" onClick = {() => clickState=1}>Login</button>\n      <button type=\"submit\" onClick = {() => clickState=2}>Create </button>\n    </form>      \n  )\n\nconst noteForm = () => (\n  <>\n    <form onSubmit={addNote}>\n      <input\n        value={newNote}\n        onChange={handleNoteChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>  \n    <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n    </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n              deleteNote = {() => deleteNoteOf(note.id)}\n            />\n        )}\n      </ul>\n  <p></p>\n  <button onClick={handleLogout}>Logout</button>\n  </>\n  )\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n      loginForm() :\n      <div>\n        <p>Hey {user.name}. Manage and remember your notes. </p>\n        {noteForm()}\n      </div>\n    }\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}